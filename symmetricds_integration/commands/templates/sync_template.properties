#
# Licensed to JumpMind Inc under one or more contributor
# license agreements.  See the NOTICE file distributed
# with this work for additional information regarding
# copyright ownership.  JumpMind Inc licenses this file
# to you under the GNU General Public License, version 3.0 (GPLv3)
# (the "License"); you may not use this file except in compliance
# with the License.
#
# You should have received a copy of the GNU General Public License,
# version 3.0 (GPLv3) along with this library; if not, see
# <http://www.gnu.org/licenses/>.
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# Friendly name to refer to this node from command line
engine.name={engine_name}

db.driver={driver}

db.url={db_url}

# The database user that SymmetricDS should use.
db.user={db_user}
# The database password
db.password={db_password}

# This node will contact the root node's sync.url to register itself.
# Leave blank to indicate this is the root node.
registration.url={register_url}

# Sync URL where other nodes can contact this node to push/pull data or register.
sync.url={sync_url}

# Node group this node belongs to, which defines what it will sync with who.
# Must match the sym_node_group configuration in database.
group.id={group_id}

# External ID for this node, which is any unique identifier you want to use.
external.id={external_id}

http.enable={http_enable}
https.enable={https_enable}
https2.enable={https_enable}


# How often to run purge job,
job.purge.period.time.ms=7200000

# How to run routing (in millis), which puts changes into batches.
job.routing.period.time.ms=5000

# How often to run push (in millis), which sends changes to other nodes.
job.push.period.time.ms=10000

# How often to run pull (in millis), which receives changes from other nodes.
job.pull.period.time.ms=10000

# Automatically register new nodes when they request it.
# If this is false, accept the registration requests using "symadmin open-registration" command.
auto.registration=true
auto.reload=true

# When this node sends an initial load of data to another node, first send table create scripts.
initial.load.delete.first=true
initial.load.create.first=true

# Triger only when actual changes occurs. Do not trigger if nothing was updated
trigger.update.capture.changed.data.only.enabled=true